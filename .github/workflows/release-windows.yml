name: Release windows

on:
  push:
    tags: ["*"]

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    working-directory: "pkg_select_installer/windows"

jobs:
  build-i686:
    runs-on: windows-2022

    steps:
      - name: Copy project sources
        uses: actions/checkout@v3

      - name: Install i686-pc-windows-msvc
        run: rustup target add i686-pc-windows-msvc

      - name: Build i686 debug build
        run: cargo build --verbose --target=i686-pc-windows-msvc
      - name: Run tests
        run: cargo test --verbose --target=i686-pc-windows-msvc
      - name: Build i686 release build
        run: cargo build --release --target=i686-pc-windows-msvc

      - name: Create installer
        run: iscc "setup.iss"
        env:
          source-path: ..\..\target\i686-pc-windows-msvc\release

      - name: Rename installer
        run: ren Output/Package-Select-Installer.exe Package-Select-Installer-x86.exe

      - name: Upload installer as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Package-Select-Installer-x86.exe
          path: pkg_select_installer/windows/Output/Package-Select-Installer-x86.exe

      - name: Upload installer to release
        uses: softprops/action-gh-release@v2
        if: ${{startsWith(github.ref, 'refs/tags/') }}
        with:
          files: pkg_select_installer/windows/Output/Package-Select-Installer-x86.exe

  build-x86_64:
    runs-on: windows-2022

    steps:
      - name: Copy project sources
        uses: actions/checkout@v3

      - name: Install x86_64-pc-windows-msvc
        run: rustup target add x86_64-pc-windows-msvc

      - name: Build x86_64 debug build
        run: cargo build --verbose --target=x86_64-pc-windows-msvc
      - name: Run tests
        run: cargo test --verbose --target=x86_64-pc-windows-msvc
      - name: Build x86_64 release build
        run: cargo build --release --target=x86_64-pc-windows-msvc

      - name: Create installer
        run: iscc "setup.iss"
        env:
          source-path: ..\..\target\x86_64-pc-windows-msvc\release

      - name: Rename installer
        run: ren Output/Package-Select-Installer.exe Package-Select-Installer-x64.exe

      - name: Upload installer as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Package-Select-Installer-x64.exe
          path: pkg_select_installer/windows/Output/Package-Select-Installer-x64.exe

      - name: Upload installer to release
        uses: softprops/action-gh-release@v2
        if: ${{startsWith(github.ref, 'refs/tags/') }}
        with:
          files: pkg_select_installer/windows/Output/Package-Select-Installer-x64.exe

  # Tests are ignored due to runners provided by GitHub actions run on x64-based host machine only.
  build-aarch64:
    runs-on: windows-2022

    steps:
      - name: Copy project sources
        uses: actions/checkout@v3

      - name: Install aarch64-pc-windows-msvc
        run: rustup target add aarch64-pc-windows-msvc

      - name: Build aarch64 release build
        run: cargo build --release --target=aarch64-pc-windows-msvc

      - name: Create installer
        run: iscc "setup.iss"
        env:
          source-path: ..\..\target\aarch64-pc-windows-msvc\release

      - name: Rename installer
        run: ren Output/Package-Select-Installer.exe Package-Select-Installer-aarch64.exe

      - name: Upload installer as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Package-Select-Installer-aarch64.exe
          path: pkg_select_installer/windows/Output/Package-Select-Installer-aarch64.exe

      - name: Upload installer to release
        uses: softprops/action-gh-release@v1
        if: ${{startsWith(github.ref, 'refs/tags/') }}
        with:
          files: pkg_select_installer/windows/Output/Package-Select-Installer-aarch64.exe
